{"version":3,"sources":["components/UI/UsersListFilter.module.scss","components/SearchList/UsersList.module.scss","store/users-slice.ts","store/notification-slice.ts","store/index.ts","img/leocode-log.svg","components/SearchList/ListElement.tsx","components/UI/UsersListFilter.tsx","components/SearchList/UsersList.tsx","components/UI/Notification.tsx","store/selectors/selectors.ts","App.tsx","store/users-actions.ts","index.tsx","App.module.scss","components/SearchList/ListElement.module.scss","components/UI/Notification.module.scss"],"names":["module","exports","usersSlice","createSlice","name","initialState","usersList","reducers","fetchUsers","state","action","payload","usersActions","actions","notificationSlice","notification","status","title","message","show","hideNotification","showNotification","notificationActions","store","configureStore","reducer","users","notifications","grayParagraph","classes","ListElement","index","userName","className","user","UsersListFilter","onFilterChange","input","type","placeholder","onChange","autoFocus","UsersList","useState","searchUsersInputValue","setSearchUsersInputValue","useSelector","UsersListLayout","array","map","username","id","e","target","value","trim","toLowerCase","filter","includes","Notification","specialClasses","error","success","cssClasses","selectNotificationData","selectShowNotification","App","dispatch","useDispatch","useEffect","a","fetchData","fetch","response","ok","Error","setTimeout","json","data","app","src","leocodeLogo","alt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95a92bcc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"UsersListFilter_input__3XVtQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users-list\":\"UsersList_users-list__1XOZE\"};","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst usersSlice = createSlice({\n  name: \"Users List\",\n  initialState: {\n    usersList: [],\n  },\n  reducers: {\n    fetchUsers(state, action) {\n      state.usersList = action.payload.usersList;\n    },\n  },\n});\n\nexport const usersActions = usersSlice.actions;\n\nexport default usersSlice;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst notificationSlice = createSlice({\n  name: \"Fetch data notification\",\n  initialState: {\n    notification: {\n      status: \"pending\",\n      title: \"Fetching...\",\n      message: \"\",\n    },\n    show: true,\n  },\n  reducers: {\n    hideNotification(state) {\n      state.show = false;\n    },\n    showNotification(state, action) {\n      state.notification = {\n        status: action.payload.status,\n        title: action.payload.title,\n        message: action.payload.message,\n      };\n    },\n  },\n});\n\nexport const notificationActions = notificationSlice.actions;\n\nexport default notificationSlice;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport usersSlice from \"./users-slice\";\nimport notificationSlice from \"./notification-slice\";\n\nconst store = configureStore({\n  reducer: {\n    users: usersSlice.reducer,\n    notifications: notificationSlice.reducer,\n  },\n});\n\nexport default store;\n","export default __webpack_public_path__ + \"static/media/leocode-log.27bf6a3e.svg\";","import { FC } from \"react\";\nimport classes from \"./ListElement.module.scss\";\n\ntype ListElementProps = {\n  index: number;\n  name: string;\n  userName: string;\n};\n\nconst grayParagraph = classes[\"paragraph-gray\"];\n\nconst ListElement: FC<ListElementProps> = ({ index, name, userName }) => (\n  <li className={classes.user}>\n    <p className={grayParagraph}>{index}.</p>\n    <p className={classes.name}>{name}</p>\n    <p className={grayParagraph}>@{userName}</p>\n  </li>\n);\n\nexport default ListElement;\n","import { ChangeEventHandler, FC } from \"react\";\nimport classes from \"./UsersListFilter.module.scss\";\n\ntype UsersListFilterProps = {\n  onFilterChange: ChangeEventHandler<HTMLInputElement>;\n};\n\nconst UsersListFilter: FC<UsersListFilterProps> = ({ onFilterChange }) => (\n  <input\n    className={classes.input}\n    type=\"text\"\n    placeholder=\"Search by user name...\"\n    onChange={onFilterChange}\n    autoFocus\n  />\n);\n\nexport default UsersListFilter;\n","import { ChangeEvent, useState } from \"react\";\nimport ListElement from \"./ListElement\";\nimport UsersListFilter from \"../UI/UsersListFilter\";\nimport { RootStateOrAny, useSelector } from \"react-redux\";\n\nimport classes from \"./UsersList.module.scss\";\nimport { UserType } from \"../../types/userType\";\n\nconst UsersList = () => {\n  const [searchUsersInputValue, setSearchUsersInputValue] = useState(\"\");\n  const usersList = useSelector(\n    (state: RootStateOrAny) => state.users.usersList\n  );\n\n  const onFilterChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchUsersInputValue(e.target.value.trim().toLowerCase());\n  };\n\n  const UsersListLayout = (array: Array<UserType>) =>\n    array?.map((user, index: number) => (\n      <ListElement\n        key={user.id}\n        index={index + 1}\n        name={user.name}\n        userName={user.username}\n      />\n    ));\n\n  return (\n    <div className={classes[\"users-list\"]}>\n      <p> Users list </p>\n      <UsersListFilter onFilterChange={onFilterChangeHandler} />\n      <ul>\n        {searchUsersInputValue === \"\"\n          ? UsersListLayout(usersList)\n          : UsersListLayout(\n              usersList?.filter((user: UserType) =>\n                user.name.toLowerCase().includes(searchUsersInputValue)\n              )\n            )}\n      </ul>\n    </div>\n  );\n};\nexport default UsersList;\n","import { FC } from \"react\";\nimport classes from \"./Notification.module.scss\";\nimport { NotificationType } from \"../../types/notificationType\";\n\nconst Notification: FC<NotificationType> = ({ status, title, message }) => {\n  let specialClasses: string = \"\";\n\n  if (status === \"error\") {\n    specialClasses = classes.error;\n  }\n  if (status === \"success\") {\n    specialClasses = classes.success;\n  }\n\n  const cssClasses = `${classes.notification} ${specialClasses}`;\n\n  return (\n    <section className={cssClasses}>\n      <h2>{title}</h2>\n      <p>{message}</p>\n    </section>\n  );\n};\n\nexport default Notification;\n","import { NotificationType } from \"../../types/notificationType\";\nimport { StateType } from \"../../types/stateType\";\n\nexport const selectNotificationData = (state: StateType): NotificationType => {\n  const { notification } = state.notifications;\n  return notification;\n};\n\nexport const selectShowNotification = (state: StateType): boolean => {\n  const { show } = state.notifications;\n  return show;\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchUsersList } from \"./store/users-actions\";\nimport classes from \"./App.module.scss\";\nimport leocodeLogo from \"./img/leocode-log.svg\";\nimport UsersList from \"./components/SearchList/UsersList\";\nimport Notification from \"./components/UI/Notification\";\nimport {\n  selectNotificationData,\n  selectShowNotification,\n} from \"./store/selectors/selectors\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const { message, status, title } = useSelector(selectNotificationData);\n  const showNotification = useSelector(selectShowNotification);\n\n  useEffect(() => {\n    dispatch(fetchUsersList());\n  }, [dispatch, status]);\n\n  return (\n    <div className={classes.app}>\n      <header className={classes[\"app-header\"]}>\n        <img\n          src={leocodeLogo}\n          alt=\"Leocode logo\"\n          className={classes[\"app-header-logo\"]}\n        />\n        <p> This is recruitment task for Leocode company.</p>\n      </header>\n      {showNotification && <Notification status={status} title={title} message={message} />}\n      <section className={classes[\"app-main\"]}>\n        <UsersList />\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import { Dispatch } from \"redux\";\nimport { usersActions } from \"./users-slice\";\nimport { notificationActions } from \"./notification-slice\";\n\nconst hidePositivNotificationTime = 1000;\n\nexport const fetchUsersList = () => {\n  return async (dispatch: Dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(\n        \"https://jsonplaceholder.typicode.com/users\"\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Could not fetch users data!\");\n      } else {\n        dispatch(\n          notificationActions.showNotification({\n            status: \"success\",\n            title: \"Success!\",\n            message: \"Fetched users data successfully!\",\n          })\n        );\n        setTimeout(\n          () => dispatch(notificationActions.hideNotification()),\n          hidePositivNotificationTime\n        );\n      }\n\n      const data = await response.json();\n\n      return data;\n    };\n\n    try {\n      const usersList = await fetchData();\n      dispatch(\n        usersActions.fetchUsers({\n          usersList: usersList,\n        })\n      );\n    } catch (error) {\n      dispatch(\n        notificationActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Fetching users data failed!\",\n        })\n      );\n    }\n  };\n};\n","import ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux';\n\nimport store from './store/index';\nimport './index.scss'\nimport App from './App'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\",\"app-header\":\"App_app-header__1U7id\",\"app-header-logo\":\"App_app-header-logo__6uaAW\",\"app-main\":\"App_app-main__3cwT_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"ListElement_user__1qZ1F\",\"name\":\"ListElement_name__2Spnd\",\"paragraph-gray\":\"ListElement_paragraph-gray__3M-Pg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2QtJv\",\"error\":\"Notification_error__zWtTG\",\"success\":\"Notification_success__2PruW\"};"],"sourceRoot":""}